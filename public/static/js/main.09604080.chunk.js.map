{"version":3,"sources":["context.js","components/LaunchItem.js","components/NextLaunch.js","components/LaunchesFilter.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Context","React","createContext","Provider","state","launches","rocketNames","launchYears","filteredLaunches","loading","success","rocketName","launchedYear","upcomingOnly","hasImages","hasVideos","getLaunches","client","query","gql","_templateObject","then","response","data","map","launch","push","rocket","rocket_name","launch_year","uniqueRockets","Set","Object","toConsumableArray","uniqueYears","_this","setState","catch","error","console","log","handleChange","e","target","type","value","checked","name","concat","defineProperty","filterLaunches","_this$state","tempLaunches","filter","launch_success","upcoming","links","flickr_images","length","youtube_id","this","react_default","a","createElement","objectSpread","props","children","Component","Consumer","LaunchItem","_ref","_ref$launch","flight_number","mission_name","launch_date_local","className","react_router_dom","to","style","color","classNames","text-success","text-danger","text-secondary","dist_default","format","Launched","renderer","days","hours","minutes","seconds","completed","NextLaunch_Launched","NextLaunch","nextLaunch","findNext","now","Date","parse","sort","b","index_es","date","LaunchesFilter","context","useContext","htmlFor","id","onChange","index","key","MissionKey","Launches","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","_this$context","textAlign","margin","display","flex","role","aria-label","marginTop","lib","size","NextLaunch_NextLaunch","components_LaunchesFilter","components_MissionKey","contextType","LAUNCH_QUERY","Launch_templateObject","Launch","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","match","params","parseInt","Fragment","react_apollo_esm","variables","_data$launch","_data$launch$rocket","rocket_id","rocket_type","_data$launch$links","article_link","react_slick_lib_default","assign","image","Container","imageLink","title","width","height","src","frameborder","allow","allowfullscreen","href","styled","div","_templateObject2","ApolloClient","uri","App","context_Provider","logo","alt","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.09604080.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { client } from './App';\nconst Context = React.createContext();\n\nclass Provider extends Component {\n  state = {\n    launches: [],\n    rocketNames: [],\n    launchYears: [],\n    filteredLaunches: [],\n    loading: true,\n    // defaults for filter:\n    success: 'all',\n    rocketName: 'all',\n    launchedYear: 'all',\n    upcomingOnly: false,\n    hasImages: false,\n    hasVideos: false\n  };\n\n  getLaunches = () => {\n    client\n      .query({\n        query: gql`\n          query LaunchesQuery {\n            launches {\n              flight_number\n              mission_name\n              launch_year\n              launch_date_local\n              launch_success\n              upcoming\n              rocket {\n                rocket_name\n              }\n              links {\n                youtube_id\n                flickr_images\n              }\n            }\n          }\n        `\n      })\n      .then(response => {\n        //   getting unique rocket names\n        let rocketNames = [];\n        let launchYears = [];\n        const { launches } = response.data;\n        launches.map(launch => {\n          return (\n            rocketNames.push(launch.rocket.rocket_name),\n            launchYears.push(launch.launch_year)\n          );\n        });\n        const uniqueRockets = new Set(rocketNames);\n        rocketNames = [...uniqueRockets];\n\n        const uniqueYears = new Set(launchYears);\n        launchYears = [...uniqueYears];\n\n        this.setState({\n          launches: response.data.launches,\n          filteredLaunches: response.data.launches,\n          loading: false,\n          rocketNames: rocketNames,\n          launchYears: launchYears\n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = e => {\n    const target = e.target;\n    const type = target.type;\n    const value = type === 'checkbox' ? target.checked : target.value;\n    const name = e.target.name;\n    console.log(`type: ${type} val: ${value} name: ${name}`);\n\n    this.setState(\n      {\n        [name]: value\n      },\n      this.filterLaunches\n    );\n  };\n\n  filterLaunches = () => {\n    let {\n      launches,\n      success,\n      rocketName,\n      launchedYear,\n      upcomingOnly,\n      hasImages,\n      hasVideos\n    } = this.state;\n\n    let tempLaunches = [...launches];\n\n    // filter by success\n    if (success !== 'all') {\n      if (success === 'success') {\n        tempLaunches = tempLaunches.filter(\n          launch => launch.launch_success === true\n        );\n      }\n      if (success === 'fail') {\n        tempLaunches = tempLaunches.filter(\n          launch => launch.launch_success === false\n        );\n      }\n      if (success === 'unknown') {\n        tempLaunches = tempLaunches.filter(\n          launch => launch.launch_success === null\n        );\n      }\n    }\n    // filter by rocketNames\n    if (rocketName !== 'all') {\n      tempLaunches = tempLaunches.filter(\n        launch => launch.rocket.rocket_name === rocketName\n      );\n    }\n    // filter by launchYear\n    if (launchedYear !== 'all') {\n      tempLaunches = tempLaunches.filter(\n        launch => launch.launch_year === launchedYear\n      );\n    }\n    //filter by upcomingOnly\n    if (upcomingOnly === true) {\n      tempLaunches = tempLaunches.filter(launch => launch.upcoming === true);\n    }\n\n    tempLaunches = hasImages\n      ? (tempLaunches = tempLaunches.filter(\n          launch => launch.links.flickr_images.length > 0\n        ))\n      : tempLaunches;\n\n    // filter by videosOnly\n    tempLaunches = hasVideos\n      ? (tempLaunches = tempLaunches.filter(launch => launch.links.youtube_id))\n      : tempLaunches;\n\n    this.setState({ filteredLaunches: tempLaunches });\n  };\n\n  componentDidMount() {\n    this.getLaunches();\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          handleChange: this.handleChange\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nconst Consumer = Context.Consumer;\nexport { Provider, Consumer, Context };\n","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n  children\n}) {\n  return (\n    <div className=\"card card-body my-3\">\n      <div className=\"row\">{children}</div>\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <Link to={`/launch/${flight_number}`} style={{ color: 'inherit' }}>\n            <h4>\n              Mission:{' '}\n              <span\n                className={classNames({\n                  'text-success': launch_success,\n                  'text-danger': launch_success === false,\n                  'text-secondary': launch_success === null\n                })}\n              >\n                {mission_name}\n              </span>\n            </h4>\n          </Link>\n          <p>\n            Launch Date:{' '}\n            <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link\n            to={`/launch/${flight_number}`}\n            className=\"btn btn-secondary my-4\"\n          >\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Countdown from 'react-countdown-now';\nimport LaunchItem from './LaunchItem';\n\nconst Launched = () => <span> 🚨 Mission Launched! 🚀🚨 </span>;\n\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return <Launched />;\n  } else {\n    return (\n      <div className=\"col-md-9\">\n        <h4 className=\"text-white mb-4\">Next Launch:</h4>\n        <h5 className=\"text-primary\">\n          In {days} Days : {hours} Hours : {minutes} Minutes : {seconds} Seconds\n        </h5>\n        <hr />\n      </div>\n    );\n  }\n};\nexport default class NextLaunch extends Component {\n  state = {\n    launches: this.props.launches,\n    nextLaunch: {\n      launch_date_local: ''\n    }\n  };\n\n  componentDidMount() {\n    const nextLaunch = this.findNext(this.props.launches);\n    this.setState({ nextLaunch });\n  }\n\n  findNext = launches => {\n    const now = new Date();\n\n    const soonest = launches\n      .filter(launch => {\n        const launchDate = Date.parse(launch.launch_date_local);\n        return launchDate - now > 0;\n      })\n      .sort((a, b) => {\n        return (\n          Date.parse(a.launch_date_local) - Date.parse(b.launch_date_local)\n        );\n      })[0];\n\n    return soonest;\n  };\n\n  render() {\n    return (\n      <div className=\"mt-5\">\n        <LaunchItem launch={this.state.nextLaunch}>\n          <Countdown\n            date={this.state.nextLaunch.launch_date_local}\n            renderer={renderer}\n          />\n        </LaunchItem>\n      </div>\n    );\n  }\n}\n","import React, { useContext } from 'react';\nimport { Context } from '../context';\n\nconst LaunchesFilter = () => {\n  const context = useContext(Context);\n  const {\n    success,\n    rocketName,\n    rocketNames,\n    launchedYear,\n    launchYears,\n    upcomingOnly,\n    hasImages,\n    hasVideos,\n    handleChange\n  } = context;\n  return (\n    <div className=\"filter-container card card-body my-5\">\n      <h5 className=\"text-white\">Filter Launches</h5>\n      <form className=\"filter-form\">\n        <div className=\"form-group\">\n          {/* Selects: */}\n          <div className=\"row\">\n            <div className=\"form-select col-sm-10 my-2\">\n              {/* Success */}\n              <label htmlFor=\"success\" className=\"text-white\">\n                Launch Success:{' '}\n              </label>\n              <select\n                name=\"success\"\n                id=\"success\"\n                value={success}\n                className=\"form-control\"\n                onChange={handleChange}\n              >\n                <option value={'all'}>All</option>\n                <option value={'success'}>Success</option>\n                <option value={'fail'}>Fail</option>\n                <option value={'unknown'}>Unknown</option>\n              </select>\n            </div>\n            {/* End Success */}\n            {/* RocketName */}\n            <div className=\"form-select col-sm-10 my-2\">\n              <label htmlFor=\"rocketName\" className=\"text-white\">\n                Rocket Type:{' '}\n              </label>\n              <select\n                name=\"rocketName\"\n                id=\"rocketName\"\n                value={rocketName}\n                className=\"form-control\"\n                onChange={handleChange}\n              >\n                <option value={'all'}>All</option>\n                {rocketNames.map((name, index) => {\n                  return (\n                    <option value={name} key={index}>\n                      {name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            {/* End RocketName */}\n            {/* Launch Year */}\n            <div className=\"form-select col-sm-10 my-2\">\n              <label htmlFor=\"launchedYear\" className=\"text-white\">\n                Launch Year:{' '}\n              </label>\n              <select\n                name=\"launchedYear\"\n                id=\"launchedYear\"\n                value={launchedYear}\n                className=\"form-control\"\n                onChange={handleChange}\n              >\n                <option value={'all'}>All</option>\n                {launchYears.map((name, index) => {\n                  return (\n                    <option value={name} key={index}>\n                      {name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n\n            {/* End Launch Year */}\n          </div>\n          {/* End Success */}\n          {/* Toggles: */}\n          <div className=\"row mt-5\">\n            {/* Upcoming: */}\n\n            <div className=\"custom-control custom-switch mx-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"upcomingSwitch\"\n                name=\"upcomingOnly\"\n                checked={upcomingOnly}\n                onChange={handleChange}\n              />\n              <label\n                className=\"custom-control-label text-white \"\n                htmlFor=\"upcomingSwitch\"\n              >\n                Upcoming Launches\n              </label>\n            </div>\n            {/* End Upcoming */}\n            {/* hasImages */}\n            <div className=\"custom-control custom-switch mx-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"imagesSwitch\"\n                name=\"hasImages\"\n                checked={hasImages}\n                onChange={handleChange}\n              />\n              <label\n                className=\"custom-control-label text-white \"\n                htmlFor=\"imagesSwitch\"\n              >\n                Has Images\n              </label>\n            </div>\n            {/* endImages */}\n            {/* hasVideos */}\n            <div className=\"custom-control custom-switch mx-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"videosSwitch\"\n                name=\"hasVideos\"\n                checked={hasVideos}\n                onChange={handleChange}\n              />\n              <label\n                className=\"custom-control-label text-white \"\n                htmlFor=\"videosSwitch\"\n              >\n                Has Video\n              </label>\n            </div>\n            {/* End Videos */}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LaunchesFilter;\n","import React from 'react';\n\nconst MissionKey = () => {\n  return (\n    <div className=\"my-3 mx-3\">\n      <h5 className=\"my-3\">Mission Success Key:</h5>\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> ={' '}\n        <span className=\"mr-5\">Success</span>\n        <span className=\"px-3 mr-2 bg-danger\" /> ={' '}\n        <span className=\"mr-5\">Fail</span>\n        <span className=\"px-3 mr-2 bg-secondary\" /> ={' '}\n        <span className=\"mr-5\">Unknown</span>\n      </p>\n    </div>\n  );\n};\n\nexport default MissionKey;\n","import React, { Component } from 'react';\nimport { JellyfishSpinner } from 'react-spinners-kit';\nimport { Context } from '../context';\n\nimport NextLaunch from './NextLaunch';\nimport LaunchesFilter from './LaunchesFilter';\nimport MissionKey from './MissionKey';\nimport LaunchItem from './LaunchItem';\n\nexport class Launches extends Component {\n  static contextType = Context;\n  render() {\n    let { launches, loading, filteredLaunches } = this.context;\n    return loading ? (\n      <div\n        style={{\n          textAlign: 'center',\n          margin: '40% auto',\n          display: 'flex'\n        }}\n      >\n        <h1 className=\"text-center\" style={{ flex: '2' }}>\n          {' '}\n          Getting{' '}\n          <span role=\"img\" aria-label=\"rocket\">\n            {' '}\n            🚀\n          </span>{' '}\n          stats\n        </h1>\n        <div style={{ flex: '1', marginTop: '-80px' }}>\n          <JellyfishSpinner size={220} color=\"#FFFFFF\" />\n        </div>\n      </div>\n    ) : (\n      <div>\n        <NextLaunch launches={launches} />\n        <LaunchesFilter />\n        <div className=\"row\">\n          <MissionKey className=\"col-md-6 mx-5\" />\n          <h5 className=\"my-5 text-right col-md-6\">\n            {' '}\n            {filteredLaunches.length} Launches\n          </h5>\n        </div>\n\n        {filteredLaunches.length === 0 ? (\n          <h5>Sorry, no launches were found with your search criteria...</h5>\n        ) : (\n          filteredLaunches.map(launch => (\n            <LaunchItem key={launch.flight_number} launch={launch} />\n          ))\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Launches;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Slider from 'react-slick';\nimport styled from 'styled-components';\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n      links {\n        article_link\n        youtube_id\n        flickr_images\n      }\n    }\n  }\n`;\n\nexport class Launch extends Component {\n  render() {\n    const sliderSettings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type },\n              links: { article_link, youtube_id, flickr_images }\n            } = data.launch;\n            return (\n              <div>\n                <h1 className=\"display-4 my-5\">\n                  <span className=\"text-dark\">Mission: </span>\n                  {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{' '}\n                    <span\n                      className={classNames({\n                        'text-success': launch_success === true,\n                        'text-danger': launch_success === false,\n                        'text-secondary': launch_success === null\n                      })}\n                    >\n                      {launch_success ? 'Yes' : null}\n                      {launch_success === false ? 'No' : null}\n                      {launch_success === null ? 'Unknown' : null}\n                    </span>\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">RocketID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Media </h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Images:\n                    {flickr_images.length > 0 ? (\n                      <Slider {...sliderSettings} className=\"my-3\">\n                        {flickr_images.map(image => (\n                          <Container imageLink={image} />\n                        ))}\n                      </Slider>\n                    ) : (\n                      <span> No Images available at this time</span>\n                    )}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Video:\n                    {youtube_id ? (\n                      <div className=\"text-center\">\n                        <br />\n                        <iframe\n                          title=\"video\"\n                          className=\"my-3 \"\n                          width=\"100%\"\n                          height=\"450px\"\n                          src={`https://www.youtube.com/embed/${youtube_id}`}\n                          frameborder=\"0\"\n                          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                          allowfullscreen\n                        />\n                      </div>\n                    ) : (\n                      <span>No Video available at this time</span>\n                    )}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Article :{' '}\n                    {article_link ? (\n                      <a\n                        href={`${article_link}`}\n                        className=\"btn btn-secondary mx-5\"\n                      >\n                        Read More\n                      </a>\n                    ) : (\n                      <span>\n                        Sorry, there's no article available at this time\n                      </span>\n                    )}\n                  </li>\n                </ul>\n              </div>\n            );\n          }}\n        </Query>\n        <hr />\n        <Link to=\"/\" className=\"btn btn-primary my-5\">\n          Return Home\n        </Link>\n      </>\n    );\n  }\n}\n\nconst Container = styled.div`\n  background-image: url('${props => props.imageLink}');\n  background-repeat:no-repeat;\n  background-size:cover;\n  background-position:center;\n  height: 60vh;\n`;\n\nexport default Launch;\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Provider } from './context';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.svg';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Provider>\n        <Router>\n          <div className=\"container\">\n            <Link to=\"/\">\n              <img\n                src={logo}\n                alt=\"logo\"\n                style={{ display: 'block', margin: 'auto' }}\n              />\n            </Link>\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </div>\n        </Router>\n      </Provider>\n    </ApolloProvider>\n  );\n}\n\nexport { client };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6ff54c0f.svg\";"],"sourceRoot":""}
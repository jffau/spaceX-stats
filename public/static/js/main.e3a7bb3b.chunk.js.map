{"version":3,"sources":["logo.svg","components/MissionKey.js","components/LaunchItem.js","components/NextLaunch.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MissionKey","react_default","a","createElement","className","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","children","react_router_dom","to","concat","style","color","classNames","text-success","text-danger","text-secondary","dist_default","format","Launched","renderer","days","hours","minutes","seconds","completed","NextLaunch_Launched","NextLaunch","state","launches","_this","props","nextLaunch","findNext","now","Date","filter","parse","sort","b","this","setState","Fragment","index_es","date","Component","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_apollo_esm","query","data","loading","error","console","log","NextLaunch_NextLaunch","components_MissionKey","map","LAUNCH_QUERY","Launch_templateObject","Launch","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","display","margin","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3a7bb3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ff54c0f.svg\";","import React from 'react';\n\nconst MissionKey = () => {\n  return (\n    <div className=\"my-3\">\n      <h5 className=\"my-3\">Mission Success Key:</h5>\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> ={' '}\n        <span className=\"mr-5\">Success</span>\n        <span className=\"px-3 mr-2 bg-danger\" /> ={' '}\n        <span className=\"mr-5\">Fail</span>\n        <span className=\"px-3 mr-2 bg-secondary\" /> ={' '}\n        <span className=\"mr-5\">Unknown</span>\n      </p>\n    </div>\n  );\n};\n\nexport default MissionKey;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n  children\n}) {\n  return (\n    <div className=\"card card-body my-3\">\n      <div className=\"row\">{children}</div>\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <Link to={`/launch/${flight_number}`} style={{ color: 'inherit' }}>\n            <h4>\n              Mission:{' '}\n              <span\n                className={classNames({\n                  'text-success': launch_success,\n                  'text-danger': launch_success === false,\n                  'text-secondary': launch_success === null\n                })}\n              >\n                {mission_name}\n              </span>\n            </h4>\n          </Link>\n          <p>\n            Launch Date:{' '}\n            <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link\n            to={`/launch/${flight_number}`}\n            className=\"btn btn-secondary my-4\"\n          >\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Countdown from 'react-countdown-now';\nimport LaunchItem from './LaunchItem';\n\nconst Launched = () => <span> ðŸš¨ Mission Launched! ðŸš€ðŸš¨ </span>;\n\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return <Launched />;\n  } else {\n    return (\n      <div className=\"col-md-9\">\n        <h4 className=\"text-primary\">Next Launch:</h4>\n        <span className=\"text-primary\">\n          In {days} Days : {hours} Hours : {minutes} Minutes : {seconds} Seconds\n        </span>\n        <hr />\n      </div>\n    );\n  }\n};\nexport default class NextLaunch extends Component {\n  state = {\n    launches: this.props.launches,\n    nextLaunch: {\n      launch_date_local: ''\n    }\n  };\n\n  componentDidMount() {\n    const nextLaunch = this.findNext(this.props.launches);\n    this.setState({ nextLaunch });\n  }\n\n  findNext = launches => {\n    const now = new Date();\n\n    const soonest = launches\n      .filter(launch => {\n        const launchDate = Date.parse(launch.launch_date_local);\n        return launchDate - now > 0;\n      })\n      .sort((a, b) => {\n        return (\n          Date.parse(a.launch_date_local) - Date.parse(b.launch_date_local)\n        );\n      })[0];\n\n    return soonest;\n  };\n\n  render() {\n    return (\n      <>\n        <LaunchItem launch={this.state.nextLaunch}>\n          <Countdown\n            date={this.state.nextLaunch.launch_date_local}\n            renderer={renderer}\n          />\n        </LaunchItem>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nimport MissionKey from './MissionKey';\nimport LaunchItem from './LaunchItem';\nimport NextLaunch from './NextLaunch';\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <>\n        <Query query={LAUNCHES_QUERY}>\n          {({ data, loading, error }) => {\n            if (loading) {\n              return <h1>Loading ...</h1>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            return (\n              <>\n                <NextLaunch launches={data.launches} />\n                {/* <h1 className=\"display-4 my-3\"> Launch Stats</h1> */}\n                <MissionKey />\n                {data.launches.map(launch => (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                ))}\n              </>\n            );\n          }}\n        </Query>\n      </>\n    );\n  }\n}\n\nexport default Launches;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nexport class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n            return (\n              <div>\n                <h1 className=\"display-4 my-5\">\n                  <span className=\"text-dark\">Mission: </span>\n                  {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{' '}\n                    <span\n                      className={classNames({\n                        'text-success': launch_success === true,\n                        'text-danger': launch_success === false,\n                        'text-secondary': launch_success === null\n                      })}\n                    >\n                      {launch_success ? 'Yes' : null}\n                      {launch_success === false ? 'No' : null}\n                      {launch_success === null ? 'Unknown' : null}\n                    </span>\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">RocketID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n              </div>\n            );\n          }}\n        </Query>\n        <hr />\n        <Link to=\"/\" className=\"btn btn-primary my-5\">\n          Return Home\n        </Link>\n      </>\n    );\n  }\n}\n\nexport default Launch;\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.svg';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"logo\"\n              style={{ display: 'block', margin: 'auto' }}\n            />\n          </Link>\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}